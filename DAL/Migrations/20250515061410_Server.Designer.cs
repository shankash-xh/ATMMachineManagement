// <auto-generated />
using System;
using DAL.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ATMMachineDbContext))]
    [Migration("20250515061410_Server")]
    partial class Server
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entity.ATMCashInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Denomination")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 0,
                            Denomination = 100
                        },
                        new
                        {
                            Id = 2,
                            Count = 0,
                            Denomination = 200
                        },
                        new
                        {
                            Id = 3,
                            Count = 0,
                            Denomination = 500
                        },
                        new
                        {
                            Id = 4,
                            Count = 0,
                            Denomination = 2000
                        });
                });

            modelBuilder.Entity("DAL.Entity.ATMTransactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DAL.Entity.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "AD00000034",
                            AccountType = 1,
                            Balance = 4562.00m,
                            Name = "Shashank",
                            PhoneNumber = "87968756483",
                            Pin = "3456",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "AD00000044",
                            AccountType = 2,
                            Balance = 5000.00m,
                            Name = "Step2gen",
                            PhoneNumber = "87968756483",
                            Pin = "3456",
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "AD00000056",
                            AccountType = 1,
                            Balance = 6000.00m,
                            Name = "raju",
                            PhoneNumber = "87968756483",
                            Pin = "3456",
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            AccountNumber = "AD00000067",
                            AccountType = 2,
                            Balance = 7000.00m,
                            Name = "Yuta",
                            PhoneNumber = "87968756483",
                            Pin = "3456",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DAL.Entity.SystemSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MinWithdrawLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("DAL.Entity.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "shashanksh72@yopmail.com",
                            IsManager = true,
                            Password = "shashank@123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "shashank.step2gen@yopmail.com",
                            IsManager = false,
                            Password = "shank@123"
                        },
                        new
                        {
                            Id = 3,
                            Email = "raju@yopmail.com",
                            IsManager = false,
                            Password = "raju@123"
                        },
                        new
                        {
                            Id = 4,
                            Email = "step2gen@yopmail.com",
                            IsManager = true,
                            Password = "step2gen@1234"
                        },
                        new
                        {
                            Id = 5,
                            Email = "yuta@yopmail.com",
                            IsManager = false,
                            Password = "yuta@123"
                        });
                });

            modelBuilder.Entity("DAL.Entity.ATMTransactions", b =>
                {
                    b.HasOne("DAL.Entity.Accounts", "Accounts")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("DAL.Entity.Accounts", b =>
                {
                    b.HasOne("DAL.Entity.Users", "User")
                        .WithOne("Account")
                        .HasForeignKey("DAL.Entity.Accounts", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entity.Accounts", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DAL.Entity.Users", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
